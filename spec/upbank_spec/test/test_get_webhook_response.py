# coding: utf-8

"""
    Up API

    The Up API gives you programmatic access to your balances and transaction data. You can request past transactions or set up webhooks to receive real-time events when new transactions hit your account. It’s new, it’s exciting and it’s just the beginning. 

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from upbank_spec.models.get_webhook_response import GetWebhookResponse

class TestGetWebhookResponse(unittest.TestCase):
    """GetWebhookResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetWebhookResponse:
        """Test GetWebhookResponse
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetWebhookResponse`
        """
        model = GetWebhookResponse()
        if include_optional:
            return GetWebhookResponse(
                data = upbank_spec.models.webhook_resource.WebhookResource(
                    type = '', 
                    id = '', 
                    attributes = upbank_spec.models.webhook_resource_attributes.WebhookResource_attributes(
                        url = '', 
                        description = '', 
                        secret_key = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    relationships = upbank_spec.models.webhook_resource_relationships.WebhookResource_relationships(
                        logs = upbank_spec.models.account_resource_relationships_transactions.AccountResource_relationships_transactions(
                            links = upbank_spec.models.account_resource_relationships_transactions_links.AccountResource_relationships_transactions_links(
                                related = '', ), ), ), 
                    links = upbank_spec.models.account_resource_links.AccountResource_links(
                        self = '', ), )
            )
        else:
            return GetWebhookResponse(
                data = upbank_spec.models.webhook_resource.WebhookResource(
                    type = '', 
                    id = '', 
                    attributes = upbank_spec.models.webhook_resource_attributes.WebhookResource_attributes(
                        url = '', 
                        description = '', 
                        secret_key = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ), 
                    relationships = upbank_spec.models.webhook_resource_relationships.WebhookResource_relationships(
                        logs = upbank_spec.models.account_resource_relationships_transactions.AccountResource_relationships_transactions(
                            links = upbank_spec.models.account_resource_relationships_transactions_links.AccountResource_relationships_transactions_links(
                                related = '', ), ), ), 
                    links = upbank_spec.models.account_resource_links.AccountResource_links(
                        self = '', ), ),
        )
        """

    def testGetWebhookResponse(self):
        """Test GetWebhookResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
